AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Deploy an BattleSnake endpoint running a ready to use AI model
Mappings: 
  RegionMap:
    ap-northeast-2:
      "MxnetLayerArn": "arn:aws:lambda:ap-northeast-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ap-northeast-2:296580773974:layer:AWSLambda-Python37-SciPy1x:2"
    ap-southeast-2:
      "MxnetLayerArn": "arn:aws:lambda:ap-southeast-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ap-southeast-2:817496625479:layer:AWSLambda-Python37-SciPy1x:2"
    sa-east-1:
      "MxnetLayerArn": "arn:aws:lambda:sa-east-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:sa-east-1:640010853179:layer:AWSLambda-Python37-SciPy1x:2"
    eu-west-1:
      "MxnetLayerArn": "arn:aws:lambda:eu-west-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:eu-west-1:399891621064:layer:AWSLambda-Python37-SciPy1x:2"
    eu-west-3:
      "MxnetLayerArn": "arn:aws:lambda:eu-west-3:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:eu-west-3:959311844005:layer:AWSLambda-Python37-SciPy1x:2"
    us-east-1:
      "MxnetLayerArn": "arn:aws:lambda:us-east-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python37-SciPy1x:2"
    us-west-2:
      "MxnetLayerArn": "arn:aws:lambda:us-west-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:us-west-2:420165488524:layer:AWSLambda-Python37-SciPy1x:2"
    ca-central-1:
      "MxnetLayerArn": "arn:aws:lambda:ca-central-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ca-central-1:778625758767:layer:AWSLambda-Python37-SciPy1x:2"
Parameters:
  SnakeColor:
    Description: "Hexa RVB color of the snake"
    Default: "#128a7a"
    Type: String
  SnakeHead:
    Description: "Snake head : evil, fang, pixel, safe, ... (see: https://docs.battlesnake.com/snake-customization)"
    Default: bendr
    Type: String
  SnakeTail:
    Description: "Snake tail : sharp, pixel, bolt, curled, ... (see: https://docs.battlesnake.com/snake-customization)"
    Default: freckled
    Type: String
  CreateTrainingEnv:
    Description: "Create training environement"
    Default: true
    Type: String
    AllowedValues: [true, false]
  S3Bucket:
    Description: The bucket where the Lamba package is
    Type: String
  S3Key:
    Description: Key of the lambda package
    Default: lambda/model-lambda-package.zip
    Type: String
Conditions:
  ShouldCreateTrainingEnv:
    !Equals [true, !Ref CreateTrainingEnv]
Resources:
  NotebookInstanceExecutionRole:
    Type: AWS::IAM::Role
    Condition: ShouldCreateTrainingEnv
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - sagemaker.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  NotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Condition: ShouldCreateTrainingEnv
    Properties: 
      # DefaultCodeRepository: String
      DirectInternetAccess: Enabled
      InstanceType: ml.t3.medium
      LifecycleConfigName: !GetAtt LifeCycleConfig.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: BattleSnakeNotebook
      RoleArn: !GetAtt NotebookInstanceExecutionRole.Arn
      VolumeSizeInGB: 25
  LifeCycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Condition: ShouldCreateTrainingEnv
    Properties: 
      NotebookInstanceLifecycleConfigName: BattleSnakeConfig
      OnStart:
        OnStart:
        - Content:
            Fn::Base64:
              Fn::Join:
              - ";"
              - - cd /home/ec2-user/SageMaker
                - aws s3 sync s3://battlesnake-aws-us-west-2.s3.us-west-2.amazonaws.com/deployEndpoint.ipynb
                - jupyter nbconvert --to notebook --execute deployEndpoint.ipynb
  BattleSnakeAPIFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Properties:
            Method: ANY
            Path: "/{proxy+}"
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: lambda.proxyHandler
      Environment:
        Variables:
          SNAKE_COLOR: !Ref SnakeColor
          SNAKE_HEAD: !Ref SnakeHead
          SNAKE_TAIL: !Ref SnakeTail
          USE_SAGEMAKER_ENDPOINT: !Ref CreateTrainingEnv
      Runtime: python3.7
      MemorySize: 1024
      Layers:
        - !FindInMap [RegionMap, !Ref "AWS::Region", MxnetLayerArn]
        - !FindInMap [RegionMap, !Ref "AWS::Region", SciPyLayerArn]
      CodeUri:
        Bucket: !Ref S3Bucket
        Key: !Ref S3Key
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: demo
Outputs:
  TrainingEnvironement:
    Condition: ShouldCreateTrainingEnv
    Description:
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/openNotebook/BattleSnakeNotebook?view=lab"
  NotebookInstance:
    Condition: ShouldCreateTrainingEnv
    Description: "Notebook Instance"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/BattleSnakeNotebook"
  SnakeUrl:
    Description: "Snake URL"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/demo/"
  StartMethod:
    Description: "Start method URL"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/demo/start"


            
