AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: "(SA0001) - sagemaker-battlesnake-ai: Solution for training and deploying a Battlesnake AI using Amazon SageMaker. Version 1"
Mappings: 
  RegionMap:
    ap-northeast-2:
      "MxnetLayerArn": "arn:aws:lambda:ap-northeast-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ap-northeast-2:296580773974:layer:AWSLambda-Python37-SciPy1x:2"
    ap-southeast-2:
      "MxnetLayerArn": "arn:aws:lambda:ap-southeast-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ap-southeast-2:817496625479:layer:AWSLambda-Python37-SciPy1x:2"
    sa-east-1:
      "MxnetLayerArn": "arn:aws:lambda:sa-east-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:sa-east-1:640010853179:layer:AWSLambda-Python37-SciPy1x:2"
    eu-west-1:
      "MxnetLayerArn": "arn:aws:lambda:eu-west-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:eu-west-1:399891621064:layer:AWSLambda-Python37-SciPy1x:2"
    eu-west-3:
      "MxnetLayerArn": "arn:aws:lambda:eu-west-3:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:eu-west-3:959311844005:layer:AWSLambda-Python37-SciPy1x:2"
    us-east-1:
      "MxnetLayerArn": "arn:aws:lambda:us-east-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python37-SciPy1x:2"
    us-west-2:
      "MxnetLayerArn": "arn:aws:lambda:us-west-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:us-west-2:420165488524:layer:AWSLambda-Python37-SciPy1x:2"
    ca-central-1:
      "MxnetLayerArn": "arn:aws:lambda:ca-central-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ca-central-1:778625758767:layer:AWSLambda-Python37-SciPy1x:2"
Parameters:
  SnakeColor:
    Description: "Hexa RVB color of the snake"
    Default: "#128a7a"
    Type: String
  SnakeHead:
    Description: "Snake head : evil, fang, pixel, safe, ... (see: https://docs.battlesnake.com/snake-customization)"
    Default: bendr
    Type: String
  SnakeTail:
    Description: "Snake tail : sharp, pixel, bolt, curled, ... (see: https://docs.battlesnake.com/snake-customization)"
    Default: freckled
    Type: String
  S3Bucket:
    Description: The bucket where the Lamba package is
    Type: String
Resources:
  NotebookInstanceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - sagemaker.amazonaws.com
            Action:
              - 'sts:AssumeRole'
  NotebookInstanceIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: battlesnake-notebook-instance-policy
      Roles:
        - !Ref NotebookInstanceExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sagemaker:CreateTrainingJob
          - sagemaker:DescribeTrainingJob
          - sagemaker:CreateModel
          - sagemaker:DescribeModel
          - sagemaker:DeleteModel
          - sagemaker:DescribeTransformJob
          - sagemaker:CreateTransformJob
          - sagemaker:DescribeEndpointConfig
          - sagemaker:CreateEndpointConfig
          - sagemaker:CreateEndpoint
          - sagemaker:DescribeEndpoint
          Resource:
          - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*"
        - Effect: Allow
          Action:
          - ecr:GetAuthorizationToken
          - ecr:GetDownloadUrlForLayer
          - ecr:BatchGetImage
          - ecr:BatchCheckLayerAvailability
          Resource:
          - "*"
          - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*"
        - Effect: Allow
          Action:
          - iam:PassRole
          Resource:
          - !GetAtt NotebookInstanceExecutionRole.Arn
          Condition:
            StringEquals:
              iam:PassedToService: sagemaker.amazonaws.com
        - Effect: Allow
          Action:
          - s3:CreateBucket
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - !Sub "arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}"
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:PutObject
          - s3:DeleteObject
          Resource:
          - !Sub "arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}/*"
  NotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties: 
      # DefaultCodeRepository: String
      DirectInternetAccess: Enabled
      InstanceType: ml.t3.medium
      LifecycleConfigName: !GetAtt LifeCycleConfig.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: BattleSnakeNotebook
      RoleArn: !GetAtt NotebookInstanceExecutionRole.Arn
      VolumeSizeInGB: 25
  LifeCycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties: 
      OnStart:
        - Content:
            Fn::Base64:
              Fn::Join:
              - ";"
              - - cd /home/ec2-user/SageMaker
                - ls
                - curl https://battlesnake-aws-us-west-2.s3-us-west-2.amazonaws.com/deployEndpoint.zip
                - unzip deployEndpoint.zip
                - jupyter nbconvert --to notebook --ExecutePreprocessor.kernel_name=python3 --ExecutePreprocessor.timeout=600 --execute deployEndpoint.ipynb &
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: InvokeSagemakerEndpoint
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - sagemaker:InvokeEndpoint
              Resource: "*"
  BattleSnakeAPIFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Properties:
            Method: ANY
            Path: "/{proxy+}"
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: lambda.proxyHandler
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          SNAKE_COLOR: !Ref SnakeColor
          SNAKE_HEAD: !Ref SnakeHead
          SNAKE_TAIL: !Ref SnakeTail
      Runtime: python3.7
      MemorySize: 1024
      Layers:
        - !FindInMap [RegionMap, !Ref "AWS::Region", MxnetLayerArn]
        - !FindInMap [RegionMap, !Ref "AWS::Region", SciPyLayerArn]
      CodeUri:
        Bucket: !Ref S3Bucket
        Key: lambda/model-lambda-package.zip
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: snake
Outputs:
  TrainingEnvironement:
    Description: "Training Notebook"
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/openNotebook/BattleSnakeNotebook?view=lab"
  SnakeEndpoint:
    Description: "Snake API endpoint URL"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/snake/"
  StartMethod:
    Description: "Start method URL"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/snake/start"


            
