AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "(SA0001) - sagemaker-battlesnake-ai: Solution for training and deploying a Battlesnake AI using Amazon SageMaker. Version 1"
Mappings:
  RegionMap:
    ap-northeast-2:
      "MxnetLayerArn": "arn:aws:lambda:ap-northeast-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ap-northeast-2:296580773974:layer:AWSLambda-Python37-SciPy1x:2"
    ap-southeast-2:
      "MxnetLayerArn": "arn:aws:lambda:ap-southeast-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ap-southeast-2:817496625479:layer:AWSLambda-Python37-SciPy1x:2"
    sa-east-1:
      "MxnetLayerArn": "arn:aws:lambda:sa-east-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:sa-east-1:640010853179:layer:AWSLambda-Python37-SciPy1x:2"
    eu-west-1:
      "MxnetLayerArn": "arn:aws:lambda:eu-west-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:eu-west-1:399891621064:layer:AWSLambda-Python37-SciPy1x:2"
    eu-west-3:
      "MxnetLayerArn": "arn:aws:lambda:eu-west-3:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:eu-west-3:959311844005:layer:AWSLambda-Python37-SciPy1x:2"
    us-east-1:
      "MxnetLayerArn": "arn:aws:lambda:us-east-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:us-east-1:668099181075:layer:AWSLambda-Python37-SciPy1x:2"
    us-west-2:
      "MxnetLayerArn": "arn:aws:lambda:us-west-2:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:us-west-2:420165488524:layer:AWSLambda-Python37-SciPy1x:2"
    ca-central-1:
      "MxnetLayerArn": "arn:aws:lambda:ca-central-1:752200179490:layer:AWSLambda-Python37-MXNet:1"
      "SciPyLayerArn": "arn:aws:lambda:ca-central-1:778625758767:layer:AWSLambda-Python37-SciPy1x:2"
Parameters:
  SnakeColor:
    Description: "Hexa RGB color of the snake"
    Default: "#128a7a"
    Type: String
  SnakeHead:
    Description: "Snake head : evil, fang, pixel, safe, ... (see: https://docs.battlesnake.com/snake-customization)"
    Default: bendr
    Type: String
  SnakeTail:
    Description: "Snake tail : sharp, pixel, bolt, curled, ... (see: https://docs.battlesnake.com/snake-customization)"
    Default: freckled
    Type: String
  RLMethod:
    Description: "Select the Reinforcement learning method you want to use"
    Default: RLlib
    Type: String
    AllowedValues:
      - RLlib
      - MXNet
  SagemakerTrainingInstanceType:
    Description: "Instance type used for the training. t2 is default because this is the only instance that can be launch in a new AWS account just after creation. m5 or m4 are in the free tiers, choose them if your account exist for some time already"
    Default: ml.t2.medium
    Type: String
    AllowedValues:
      - ml.t2.medium
      - ml.m5.xlarge
      - ml.m4.xlarge
  SagemakerInferenceInstanceType:
    Description: "Instance type used for the inference endpoint. t2 is default because this is the only instance that can be launch in a new AWS account just after creation. m5 or m4 are in the free tiers, choose them if your account exist for some time already"
    Default: ml.t2.medium
    Type: String
    AllowedValues:
      - ml.t2.medium
      - ml.m5.xlarge
      - ml.m4.xlarge
Conditions:
  isRLlib: !Equals [RLlib, !Ref RLMethod]
  isMXNet: !Equals [MXNet, !Ref RLMethod]
Resources:
  BattlesnakeDeployFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 90 # Adapt duration depending on cleanup need
      Handler: lambda.handler
      Role: !GetAtt LambdaDeploymentRole.Arn
      Environment:
        Variables:
          SAGEMAKER_BUCKET_NAME: !Sub "sagemaker-${AWS::Region}-${AWS::AccountId}"
      Runtime: python3.7
      MemorySize: 512
      CodeUri:
        Bucket: !Sub "battlesnake-aws-${AWS::Region}"
        Key: lambda/deployment-lambda-package.zip
      Tags:
        app: battlesnake
  CleanupBucketOnDelete:
    Type: Custom::CleanupBucket
    Properties:
      ServiceToken: !GetAtt BattlesnakeDeployFunction.Arn
      Operation: CleanupSagemakerBucket
      Tags:
        - Key: app
          Value: battlesnake
  CleanupEndpointOnDelete:
    Type: Custom::CleanupEndpoint
    Properties:
      ServiceToken: !GetAtt BattlesnakeDeployFunction.Arn
      Operation: CleanupSagemakerEndpoint
      Tags:
        - Key: app
          Value: battlesnake
  NotebookInstanceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Tags:
        - Key: app
          Value: battlesnake
  NotebookInstanceIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: battlesnake-notebook-instance-policy
      Roles:
        - !Ref NotebookInstanceExecutionRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sagemaker:CreateTrainingJob
              - sagemaker:DescribeTrainingJob
              - sagemaker:CreateModel
              - sagemaker:DescribeModel
              - sagemaker:DeleteModel
              - sagemaker:CreateTransformJob
              - sagemaker:DescribeTransformJob
              - sagemaker:CreateEndpointConfig
              - sagemaker:DeleteEndpointConfig
              - sagemaker:DescribeEndpointConfig
              - sagemaker:CreateEndpoint
              - sagemaker:DeleteEndpoint
              - sagemaker:UpdateEndpoint
              - sagemaker:DescribeEndpoint
              - sagemaker:InvokeEndpoint
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
            Resource:
              - "*"
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*"
          - Effect: Allow
            Action:
              - ec2:CreateVpcEndpoint
              - ec2:DescribeRouteTables
              - cloudwatch:PutMetricData
            Resource: "*"
          - Effect: Allow
            Action:
              - cloudwatch:GetMetricData
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListMetrics
            Resource:
              - !Sub "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogStreams
              - logs:GetLogEvents
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*"
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !GetAtt NotebookInstanceExecutionRole.Arn
            Condition:
              StringEquals:
                iam:PassedToService: sagemaker.amazonaws.com
          - Effect: Allow
            Action:
              - iam:GetRole
            Resource:
              - !GetAtt NotebookInstanceExecutionRole.Arn
          - Effect: Allow
            Action:
              - s3:CreateBucket
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource:
              - !Sub "arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}"
              - !Sub "arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}/*"
  NotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      DirectInternetAccess: Enabled
      InstanceType: ml.t3.medium
      LifecycleConfigName: !GetAtt LifeCycleConfig.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: BattlesnakeNotebook
      RoleArn: !GetAtt NotebookInstanceExecutionRole.Arn
      VolumeSizeInGB: 14
      Tags:
        - Key: app
          Value: battlesnake
  LifeCycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      OnStart:
        - Content:
            Fn::Base64: !Join
              - ";"
              - - cd /home/ec2-user/SageMaker
                - git clone --depth=1 https://github.com/jonomon/tmp-battlesnake.git battlesnake
                - chown -R ec2-user:ec2-user battlesnake
                - cd battlesnake
                - rm -rf .git
                - Fn::If:
                    - isRLlib
                    - !Join
                      - ";"
                      - - !Sub "sed -i 's/SAGEMAKER_TRAINING_INSTANCE_TYPE/${SagemakerTrainingInstanceType}/g' RLlibEnv/PolicyTraining.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_TRAINING_INSTANCE_TYPE/${SagemakerTrainingInstanceType}/g' RLlibEnv/deployEndpoint.py"
                        - !Sub "sed -i 's/SAGEMAKER_TRAINING_INSTANCE_TYPE/${SagemakerTrainingInstanceType}/g' RLlibEnv/HeuristicsDeveloper.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_TRAINING_INSTANCE_TYPE/${SagemakerTrainingInstanceType}/g' RLlibEnv/HILL-training.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_INFERENCE_INSTANCE_TYPE/${SagemakerInferenceInstanceType}/g' RLlibEnv/PolicyTraining.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_INFERENCE_INSTANCE_TYPE/${SagemakerInferenceInstanceType}/g' RLlibEnv/deployEndpoint.py"
                        - !Sub "sed -i 's/SAGEMAKER_INFERENCE_INSTANCE_TYPE/${SagemakerInferenceInstanceType}/g' RLlibEnv/HeuristicsDeveloper.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_INFERENCE_INSTANCE_TYPE/${SagemakerInferenceInstanceType}/g' RLlibEnv/HILL-training.ipynb"
                    - ls
                - Fn::If:
                    - isMXNet
                    - !Join
                      - ";"
                      - - !Sub "sed -i 's/SAGEMAKER_TRAINING_INSTANCE_TYPE/${SagemakerTrainingInstanceType}/g' MXNetEnv/PolicyTraining.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_TRAINING_INSTANCE_TYPE/${SagemakerTrainingInstanceType}/g' MXNetEnv/deployEndpoint.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_TRAINING_INSTANCE_TYPE/${SagemakerTrainingInstanceType}/g' MXNetEnv/HeuristicsDeveloper.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_INFERENCE_INSTANCE_TYPE/${SagemakerInferenceInstanceType}/g' MXNetEnv/PolicyTraining.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_INFERENCE_INSTANCE_TYPE/${SagemakerInferenceInstanceType}/g' MXNetEnv/deployEndpoint.ipynb"
                        - !Sub "sed -i 's/SAGEMAKER_INFERENCE_INSTANCE_TYPE/${SagemakerInferenceInstanceType}/g' MXNetEnv/HeuristicsDeveloper.ipynb"
                    - ls
                - !Sub "/bin/bash CloudFormation/on-start.sh ${RLMethod}"
  LambdaDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SagemakerCleanup
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sagemaker:DeleteEndpointConfig
                  - sagemaker:DeleteEndpoint
                  - sagemaker:DeleteModel
                  - sagemaker:DescribeEndpointConfig
                  - sagemaker:DescribeEndpoint
                  - sagemaker:DescribeModel
                Resource:
                  - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*"
        - PolicyName: SagemakerBucketAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub "arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}/*"
                  - !Sub "arn:aws:s3:::sagemaker-${AWS::Region}-${AWS::AccountId}"
  LambdaEndpointRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: InvokeSagemakerEndpoint
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sagemaker:InvokeEndpoint
                  - sagemaker:DescribeEndpoint
                Resource:
                  - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*"
      Tags:
        - Key: app
          Value: battlesnake
  BattlesnakeAPIFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Properties:
            Method: ANY
            Path: "/{proxy+}"
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: lambda.proxyHandler
      Role: !GetAtt LambdaEndpointRole.Arn
      Environment:
        Variables:
          SNAKE_COLOR: !Ref SnakeColor
          SNAKE_HEAD: !Ref SnakeHead
          SNAKE_TAIL: !Ref SnakeTail
          SELECTED_RL_METHOD: !Ref RLMethod
      Runtime: python3.7
      MemorySize: 1024
      Layers:
        - !FindInMap [RegionMap, !Ref "AWS::Region", MxnetLayerArn]
        - !FindInMap [RegionMap, !Ref "AWS::Region", SciPyLayerArn]
      CodeUri:
        Bucket: !Sub "battlesnake-aws-${AWS::Region}"
        Key: lambda/model-lambda-package.zip
      Tags:
        app: battlesnake
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: snake
      Tags:
        app: battlesnake
Outputs:
  SourceEditionInNotebook:
    Description: "Open Jupyter IDE. This authenticate you against Jupyter."
    Value: !Sub "https://console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/openNotebook/BattlesnakeNotebook?view=classic"
  HeuristicsDevEnvironment:
    Description: "Modify, visualize and re-deploy heuristics. You need to click first on 'SourceEditionInNotebook' to be authenticated."
    Value: !Sub "https://battlesnakenotebook.notebook.${AWS::Region}.sagemaker.aws/notebooks/battlesnake/${RLMethod}Env/HeuristicsDeveloper.ipynb"
  ModelTrainingEnvironment:
    Description: "Modify, train, visualize and re-deploy model.  You need to click first on 'SourceEditionInNotebook' to be authenticated."
    Value: !Sub "https://battlesnakenotebook.notebook.${AWS::Region}.sagemaker.aws/notebooks/battlesnake/${RLMethod}Env/PolicyTraining.ipynb"
  SnakeAPI:
    Description: "Use this URL on the Battlesnake platform"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/snake/"
  CheckSnakeStatus:
    Description: "Check the snake status. If you see 'ready' you can use the snake"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/snake/status"
