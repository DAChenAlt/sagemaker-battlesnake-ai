2020.04.01 - perrysc@amazon.com


eval_model.py can be used to evaluate a trained model and generate JSON files that can be visualized using
the accompanying viz_snakes.html file


Usage:

First, you need to download your recent RLlib checkpoint files from S3.

    For example:

    aws s3 cp s3://sagemaker-us-west-2-XXXXXXXXXXXX/battlesnake-rllib-ppo-2020-04-02-04-02-19-207/output/intermediate/training/PPO_MultiAgentBattlesnake-v1_381e5200_0_2020-04-02_04-05-41ob_2b272/ /tmp/checkpoints/ --recursive


Next, you need to run eval_model.py from the parent directory:

    cd ..
    export PYTHONPATH=./src:./common
    python3 ./scripts/eval_model.py --run PPO --episodes 10 --no-render --num-agents 5 --map-size 21 /tmp/checkpoints/checkpoint_2/checkpoint-2

Make sure that you adjust the --num-agents and --map-size arguments, accordingly. The last argument above is the checkpoint that you want to
use for your model evaluation run. Usually you'll want to use the most recent checkpoint.

If all goes well, you should see some output, ending with something like:

    2020-04-01 23:36:57,427	INFO trainable.py:418 -- Restored on 192.168.1.26 from checkpoint: /tmp/checkpoints/checkpoint_2/checkpoint-2
    2020-04-01 23:36:57,427	INFO trainable.py:425 -- Current state after restoring: {'_iteration': 2, '_timesteps_total': 74206, '_time_total': 286.8979289531708, '_episodes_total': 14306}
    Episode #0: reward: 20.0  steps: 10  winner: agent_0  totals: {'agent_0': 12, 'agent_1': 5, 'agent_2': -1, 'agent_3': 2, 'agent_4': 2} 
    Episode #1: reward: -1.0  steps: 5  winner: agent_3  totals: {'agent_0': -2, 'agent_1': 0, 'agent_2': -3, 'agent_3': 7, 'agent_4': -3} 
    Episode #2: reward: 25.0  steps: 15  winner: agent_0  totals: {'agent_0': 17, 'agent_1': -3, 'agent_2': 0, 'agent_3': 1, 'agent_4': 10} 
    Episode #3: reward: 18.0  steps: 9  winner: agent_1  totals: {'agent_0': 4, 'agent_1': 11, 'agent_2': 3, 'agent_3': -2, 'agent_4': 2} 
    Episode #4: reward: 31.0  steps: 14  winner: agent_2  totals: {'agent_0': -1, 'agent_1': 8, 'agent_2': 16, 'agent_3': -1, 'agent_4': 9} 
    Episode #5: reward: 25.0  steps: 13  winner: agent_0  totals: {'agent_0': 15, 'agent_1': -3, 'agent_2': -2, 'agent_3': 8, 'agent_4': 7} 
    Episode #6: reward: -2.0  steps: 4  winner: agent_4  totals: {'agent_0': -3, 'agent_1': -2, 'agent_2': 0, 'agent_3': -3, 'agent_4': 6} 
    Episode #7: reward: 19.0  steps: 12  winner: agent_0  totals: {'agent_0': 14, 'agent_1': -1, 'agent_2': -2, 'agent_3': 1, 'agent_4': 7} 
    Episode #8: reward: 33.0  steps: 15  winner: agent_3  totals: {'agent_0': 1, 'agent_1': 8, 'agent_2': 10, 'agent_3': 17, 'agent_4': -3} 
    Episode #9: reward: 24.0  steps: 17  winner: agent_2  totals: {'agent_0': 13, 'agent_1': -2, 'agent_2': 19, 'agent_3': -3, 'agent_4': -3} 


When you run the script, it will generate JSON files in the current directory. These JSON files can be visualized using viz_snakes.html

Have fun.
